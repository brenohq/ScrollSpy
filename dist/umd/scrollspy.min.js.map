{"version":3,"sources":["../../src/scrollspy.js"],"names":["instance","bind","fn","me","apply","arguments","ScrollSpy","add","this","addElement","clean","cleanItems","getItems","debug","onScroll","onResize","itemsLen","items","setDefaultVariables","prototype","throttle","callback","idle","setTimeout","startListener","window","addEventListener","stopListeners","removeEventListener","resetElementPosition","item","winHeight","innerHeight","i","len","length","pos","getElementPos","checkVisibleItems","param","top","getScrollY","el","getBoundingClientRect","reference","offset","doc","pageYOffset","document","documentElement","clientHeight","body","scrollTop","checkDocumentHeight","lastPos","docHeight","offsetHeight","count","prevItensLength","splice","currentDocHeight","currentPos","currentPosOffset","shift","nodeHtml","css","border","style","createElement","className","setAttribute","appendChild"],"mappings":"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","file":"dist/umd/scrollspy.min.js.map","sourcesContent":["/*\n * Copyright (c) 2016, Globo.com (https://github.com/globocom)\n *\n * License: MIT\n */\n\nvar instance = null;\nvar bind = function(fn, me) {\n  return function() {\n    return fn.apply(me, arguments);\n  };\n};\n\nfunction ScrollSpy() {\n  if (instance) {\n    return instance;\n  } else {\n    instance = {\n      add: bind(this.addElement, this),\n      clean: bind(this.cleanItems, this),\n      getItems: bind(this.getItems, this),\n      debug: bind(this.debug, this)\n    };\n  }\n  this.onScroll = bind(this.onScroll, this);\n  this.onResize = bind(this.onResize, this);\n  this.itemsLen = 0;\n  this.items = [];\n  this.setDefaultVariables();\n\n  return instance;\n}\n\nScrollSpy.prototype.throttle = function(callback) {\n  var idle = true;\n  return function() {\n    if (idle) {\n      callback();\n      idle = false;\n      setTimeout(function() {\n        return (idle = true);\n      }, 150);\n    }\n  };\n};\n\nScrollSpy.prototype.cleanItems = function() {\n  this.items = [];\n};\n\nScrollSpy.prototype.startListener = function() {\n  window.addEventListener(\"scroll\", this.throttle(this.onScroll));\n  window.addEventListener(\"resize\", this.throttle(this.onResize));\n};\n\nScrollSpy.prototype.stopListeners = function() {\n  window.removeEventListener(\"scroll\", this.throttle(this.onScroll));\n  window.removeEventListener(\"resize\", this.throttle(this.onResize));\n};\n\nScrollSpy.prototype.resetElementPosition = function() {\n  var item;\n  this.winHeight = window.innerHeight;\n  for (var i = 0, len = this.items.length; i < len; i++) {\n    item = this.items[i];\n    item.pos = this.getElementPos(item);\n  }\n  this.checkVisibleItems();\n};\n\nScrollSpy.prototype.getElementPos = function(param) {\n  var top = this.getScrollY();\n  var boundClient = param.el.getBoundingClientRect();\n  return boundClient[param.reference] + top - param.offset;\n};\n\nScrollSpy.prototype.getScrollY = function() {\n  var doc;\n  if (typeof pageYOffset !== \"undefined\") {\n    return pageYOffset;\n  } else {\n    doc = document.documentElement;\n    doc = doc.clientHeight ? doc : document.body;\n    return doc.scrollTop;\n  }\n};\n\nScrollSpy.prototype.onResize = function() {\n  this.throttle(function() {\n    if (this.winHeight !== window.innerHeight) {\n      this.resetElementPosition();\n    }\n  });\n};\n\nScrollSpy.prototype.onScroll = function() {\n  this.checkDocumentHeight();\n  this.checkVisibleItems();\n};\n\nScrollSpy.prototype.getItems = function() {\n  return this.items;\n};\n\nScrollSpy.prototype.setDefaultVariables = function() {\n  this.winHeight = window.innerHeight;\n  this.lastPos = this.getScrollY();\n  this.docHeight = document.body ? document.body.offsetHeight : 0;\n};\n\nScrollSpy.prototype.addElement = function(param) {\n  var count, item, prevItensLength;\n  if (!param.el) {\n    return;\n  }\n  param.offset = typeof param.offset === \"undefined\" ? 200 : param.offset;\n  param.reference = param.reference || \"top\";\n  param.pos = this.getElementPos(param);\n  prevItensLength = this.items.length;\n  count = 0;\n\n  for (var i = 0, len = this.items.length; i < len; i++) {\n    item = this.items[i];\n    if (item.pos > param.pos) {\n      break;\n    }\n    count++;\n  }\n  this.items.splice(count, 0, param);\n  this.itemsLen = this.items.length;\n  if (prevItensLength === 0) {\n    this.setDefaultVariables();\n    this.startListener();\n  }\n  this.checkVisibleItems();\n};\n\nScrollSpy.prototype.checkDocumentHeight = function() {\n  var currentDocHeight = document.body.offsetHeight;\n  if (this.docHeight !== currentDocHeight) {\n    this.docHeight = currentDocHeight;\n    this.resetElementPosition();\n  }\n};\n\nScrollSpy.prototype.checkVisibleItems = function() {\n  var item;\n  var currentPos = this.getScrollY();\n  var currentPosOffset = this.winHeight + currentPos;\n  while (this.items.length) {\n    item = this.items[0];\n    if (currentPosOffset >= item.pos) {\n      if (item.callback) {\n        item.callback();\n      }\n      this.items.shift();\n      this.itemsLen = this.items.length;\n    } else {\n      break;\n    }\n  }\n  this.lastPos = currentPos;\n  if (!this.items.length) {\n    this.stopListeners();\n  }\n};\n\nScrollSpy.prototype.debug = function() {\n  var nodeHtml, css, border, color, item;\n\n  for (var i = 0, len = this.items.length; i < len; i++) {\n    item = this.items[i];\n    color = i % 2 ? \"red\" : \"blue\";\n    border = \"2px dashed \" + color;\n    item.el.style[\"border\"] = border;\n\n    css = \"top: \" + item.pos + \";\";\n    css += \"width: 100%;\";\n    css += \"position: absolute;\";\n    css += \"border-top: \" + border + \";\";\n\n    nodeHtml = document.createElement(\"div\");\n    nodeHtml.className = \"debug-line\";\n    nodeHtml.setAttribute(\"style\", css);\n    document.body.appendChild(nodeHtml);\n  }\n};\n\nexport default new ScrollSpy();\n"]}